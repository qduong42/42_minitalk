Small data exchange program

signals in C:
SIGINT : Control C
signal (SIGINT, handler)

handler ()

allowed functions:
◦ write
◦ ft_printf and any equivalent YOU coded
◦ signal
void (*signal(int sig, void (*func)(int)))(int);
///These functions manipulate signal sets, stored in a sigset_t.  Either///
     sigemptyset() or sigfillset() must be called for every object of type///
////sigset_t before any other use of the object.////////
◦ sigemptyset
int sigemptyset(sigset_t *set);
     The sigemptyset() function initializes a signal set to be empty.
◦ sigaddset
int  sigaddset(sigset_t *set, int signo);
The sigaddset() function adds the specified signal signo to the signal
     set.
◦ sigaction
newer function prefered over signal- code will be more portable
◦ kill
◦ getpid
◦ malloc
◦ free
◦ pause
◦ sleep
◦ usleep
◦ exit

signal handler asynchronously- can interrupt code at any point.

2 executable files -> client & server

1: Server -> display PID
2: Client (params: 1: server PID 2: String to be sent)
Client communicate string passed as param to server. Server receive string and 
display it
Communication : ONLY UNIX signals
Display pretty quickly(1s for 100 char = slow)
Server should be able to be received from several clients in row, without res
2 Signals: SIGUSR1 & SIGUSR2

Signal: Event generated notify process or thread important situation arrived
no: seg fault, bus error, double free

bonus: QUEUEING? server confirms signal by sending 1 to client
support Unicode chars
